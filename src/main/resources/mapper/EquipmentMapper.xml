<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.EquipmentMapper">

    <resultMap id="EquipmentResultMap" type="com.example.demo.model.Equipment">
        <id property="equipmentId" column="equipment_id"/>
        <result property="name" column="name"/>
        <!-- 관계 매핑 : Equipment (1) - (N) Model -->
        <collection property="models" ofType="com.example.demo.model.Model" column="equipment_id"
                    select="com.example.demo.mapper.ModelMapper.findByEquipmentId"/>
    </resultMap>

    <!-- 장비별, 공장별, 상태별 조회 (페이징 포함) -->
    <select id="findByEquipmentAndFactoryWithStatus"
            resultType="com.example.demo.dto.EquipmentStatusResponse">
        SELECT
            e.equipment_id    AS equipmentId,
            e.name            AS name,
            mi.model_num      AS modelNum,
            mi.model_infos_id AS modelInfosId,
            dl.`c-rate`       AS cRate,
            dl.temp           AS temp,
            CASE 
                WHEN dl.temp &lt;= 0 OR dl.temp &gt;= 60 THEN 'danger'
                WHEN (dl.temp &gt; 0 AND dl.temp &lt;= 15) OR (dl.temp &gt; 40 AND dl.temp &lt; 60) THEN 'warning'
                ELSE 'good'
            END AS status
        FROM equipments e
        JOIN models m ON e.equipment_id = m.equipment_id
        JOIN model_infos mi ON m.model_id = mi.model_id
        JOIN data_logs dl ON dl.model_infos_id = mi.model_infos_id
        WHERE e.equipment_id = #{equipmentId}
        AND mi.factory_id = #{factoryId}
        AND dl.timestamp = (
            SELECT MAX(dl2.timestamp)
            FROM data_logs dl2
            WHERE dl2.model_infos_id = mi.model_infos_id
        )
        AND (
            CASE 
                WHEN dl.temp &lt;= 0 OR dl.temp &gt;= 60 THEN 'danger'
                WHEN (dl.temp &gt; 0 AND dl.temp &lt;= 15) OR (dl.temp &gt; 40 AND dl.temp &lt; 60) THEN 'warning'
                ELSE 'good'
            END = #{status}
        )
        ORDER BY mi.model_infos_id
        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 상태별 총 개수 조회 -->
    <select id="countByEquipmentAndFactoryWithStatus" resultType="int">
        SELECT COUNT(*)
        FROM (
            SELECT 1
            FROM equipments e
            JOIN models m ON e.equipment_id = m.equipment_id
            JOIN model_infos mi ON m.model_id = mi.model_id
            JOIN data_logs dl ON dl.model_infos_id = mi.model_infos_id
            WHERE e.equipment_id = #{equipmentId}
            AND mi.factory_id = #{factoryId}
            AND dl.timestamp = (
                SELECT MAX(dl2.timestamp)
                FROM data_logs dl2
                WHERE dl2.model_infos_id = mi.model_infos_id
            )
            AND (
                CASE 
                    WHEN dl.temp &lt;= 0 OR dl.temp &gt;= 60 THEN 'warning'
                    WHEN (dl.temp &gt; 0 AND dl.temp &lt;= 15) OR (dl.temp &gt; 40 AND dl.temp &lt; 60) THEN 'danger'
                    ELSE 'good'
                END = #{status}
            )
        ) AS temp_table
    </select>

    <!-- 장비 기본/상세 조회 -->
    <select id="getEquipmentDetail" resultType="com.example.demo.dto.EquipmentDetailResponse">
        SELECT
        mi.model_infos_id AS modelInfosId,
        mi.model_num      AS modelNum,
        dl.`c-rate`       AS cRate,
        dl.cycle          AS cycle,
        dl.distance       AS distance,
        dl.status         AS status,    <!-- ✅ status는 data_logs에서 가져옴 -->
        t.from_loc        AS fromLoc,
        t.to_loc          AS toLoc
        FROM model_infos mi
        JOIN data_logs dl ON dl.model_infos_id = mi.model_infos_id
        LEFT JOIN tasks t ON t.task_id = dl.task_id
        WHERE mi.model_infos_id = #{modelInfosId}
        ORDER BY dl.timestamp DESC
        LIMIT 1
    </select>

    <!-- 오늘 상태별 Count -->
    <select id="getTodayStatusCount" resultType="map">
        SELECT
        COUNT(*) AS totalCount,
        SUM(CASE WHEN status = 'Driving' THEN 1 ELSE 0 END) AS runCount,
        SUM(CASE WHEN status = 'Waiting' THEN 1 ELSE 0 END) AS waitCount,
        SUM(CASE WHEN status = 'Unloading' OR status='complete' THEN 1 ELSE 0 END) AS loadCount,
        SUM(CASE WHEN status = 'Charge' THEN 1 ELSE 0 END) AS chargeCount,
        SUM(CASE WHEN status = 'Cooling' THEN 1 ELSE 0 END) AS coolingCount
        FROM data_logs
        WHERE model_infos_id = #{modelInfosId}
        AND DATE(timestamp) = CURDATE()
    </select>

</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.ModelInfoMapper">

    <resultMap id="ModelInfoResultMap" type="com.example.demo.model.ModelInfo">
        <id property="modelInfosId" column="model_infos_id"/>
        <result property="modelId" column="model_id"/>
        <result property="modelNum" column="model_num"/>
        <result property="installedAt" column="installed_at"/>
        <result property="factoryId" column="factory_id"/>
    </resultMap>

    <select id="findAll" resultMap="ModelInfoResultMap">
        SELECT * FROM model_infos
    </select>

    <select id="findById" parameterType="long" resultMap="ModelInfoResultMap">
        SELECT * FROM model_infos WHERE model_infos_id = #{modelInfosId}
    </select>

    <select id="findByModelId" parameterType="long" resultMap="ModelInfoResultMap">
        SELECT * FROM model_infos WHERE model_id = #{modelId}
    </select>

    <insert id="insert" parameterType="com.example.demo.model.ModelInfo"
            useGeneratedKeys="true" keyProperty="modelInfosId">
        INSERT INTO model_infos(model_id, model_num, installed_at, factory_id)
        VALUES (#{modelId}, #{modelNum}, #{installedAt}, #{factoryId})
    </insert>

    <update id="update" parameterType="com.example.demo.model.ModelInfo">
        UPDATE model_infos
        SET model_id = #{modelId},
        model_num = #{modelNum},
        installed_at = #{installedAt},
        factory_id = #{factoryId}
        WHERE model_infos_id = #{modelInfosId}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM model_infos WHERE model_infos_id = #{modelInfosId}
    </delete>

    <!-- 장비 기본/상세 조회 -->
    <select id="getEquipmentDetail" resultType="com.example.demo.dto.EquipmentDetailResponse">
        SELECT
        mi.model_num AS modelNum,
        dl.`c-rate`   AS cRate,
        dl.cycle     AS cycle,
        dl.distance  AS distance,
        t.from_loc   AS fromLoc,
        t.to_loc     AS toLoc,
        t.status     AS status
        FROM model_infos mi
        JOIN data_logs dl ON dl.model_infos_id = mi.model_infos_id
        LEFT JOIN tasks t ON t.model_infos_id = mi.model_infos_id
        WHERE mi.model_infos_id = #{modelInfosId}
        ORDER BY dl.timestamp DESC
        LIMIT 1
    </select>

    <!-- 온도 변화량 최근 10개 -->
    <select id="getTemperatureLogs" resultType="map">
        SELECT temp, timestamp
        FROM data_logs
        WHERE model_infos_id = #{modelInfosId}
        ORDER BY timestamp DESC
        LIMIT 10
    </select>

    <!-- 오늘 상태별 Count -->
    <select id="getTodayStatusCount" resultType="map">
        SELECT
        COUNT(*) AS totalCount,
        SUM(CASE WHEN status = 'driving' THEN 1 ELSE 0 END) AS runCount,
        SUM(CASE WHEN status = 'waiting' THEN 1 ELSE 0 END) AS waitCount,
        SUM(CASE WHEN status = 'unloading' OR status='complete' THEN 1 ELSE 0 END) AS loadCount,
        SUM(CASE WHEN status = 'charging' THEN 1 ELSE 0 END) AS chargeCount,
        SUM(CASE WHEN status = 'cooling' THEN 1 ELSE 0 END) AS coolingCount
        FROM data_logs
        WHERE model_infos_id = #{modelInfosId}
        AND DATE(timestamp) = CURDATE()
    </select>

</mapper>
